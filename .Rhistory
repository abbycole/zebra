# guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "none")
plot_grid(Bactr, Para, Alis, Prevo, nrow = 2, ncol = 2 )
grad1<- c("#FFFFCC", "#FFF7B9","#FFEFA6","#FEE794","#FEDF83","#FED471","#FEC45F","#FEB44E","#FDA446","#FD943F","#FC7F38","#FC6530","#FA4B29","#F03523","#E51F1D","#D7111F","#C70623","#B30026","#990026","#800026")
grad2<- c("#deebf7", "#9ecae1", "#3182bd")
grad3<- c("#e5f5e0", "#a1d99b", "#31a354")
grad4<- c("#efedf5", "#bcbddc", "#756bb1")
#colpal<- colorRampPalette(brewer.pal(9,"YlOrRd"))(20) #color progression
colpal<- colorRampPalette(brewer.pal(11,"Spectral"))(20) #spectral progression
cc <- scales::seq_gradient_pal("blue", "red", "Lab")(seq(0,1,length.out=20))
#colpal<- sample(colpal(length(unique(PCOA$UserName))))
Bactr <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Bacteroides, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
#scale_fill_gradient(name = "category", low = "blue", high = "red")+
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Bacteroides ") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Para <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill =Parabacteroides, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
# scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Parabacteroides") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Alis <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Alistipes, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Alistipes ") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
# guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "none")
plot_grid(Bactr, Para, Alis, Prevo, nrow = 2, ncol = 2 )
test <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
scale_fill_manual(values = colpal) +
guide_colorbar()
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "none") +
scale_fill_manual(values = colpal) +
guide_colorbar()
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "none") +
scale_fill_manual(values = colpal)
Prevo
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "bottom") +
scale_fill_manual(values = colpal)
Prevo
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "bottom") +
scale_fill_manual(values = colpal) +
guide_colorbar()
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "bottom") +
scale_fill_manual(values = colpal) +
guide_colorbar(title = "Blah")
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "bottom") +
scale_fill_continuous(values = colpal)
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "bottom")
Prevo
grad1<- c("#FFFFCC", "#FFF7B9","#FFEFA6","#FEE794","#FEDF83","#FED471","#FEC45F","#FEB44E","#FDA446","#FD943F","#FC7F38","#FC6530","#FA4B29","#F03523","#E51F1D","#D7111F","#C70623","#B30026","#990026","#800026")
grad2<- c("#deebf7", "#9ecae1", "#3182bd")
grad3<- c("#e5f5e0", "#a1d99b", "#31a354")
grad4<- c("#efedf5", "#bcbddc", "#756bb1")
#colpal<- colorRampPalette(brewer.pal(9,"YlOrRd"))(20) #color progression
colpal<- colorRampPalette(brewer.pal(11,"Spectral"))(20) #spectral progression
cc <- scales::seq_gradient_pal("blue", "red", "Lab")(seq(0,1,length.out=20))
#colpal<- sample(colpal(length(unique(PCOA$UserName))))
Bactr <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Bacteroides, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
#scale_fill_gradient(name = "category", low = "blue", high = "red")+
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Bacteroides ") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Para <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill =Parabacteroides, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
# scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Parabacteroides") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Alis <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Alistipes, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Alistipes ") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "none")
plot_grid(Bactr, Para, Alis, Prevo, nrow = 2, ncol = 2 )
source('~/Documents/Projects/zebra/bin/makepdf.R', echo=TRUE)
color.bar <- function(lut, min, max=-min, nticks=11, ticks=seq(min, max, len=nticks), title='') {
scale = (length(lut)-1)/(max-min)
dev.new(width=1.75, height=5)
plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
color.bar(colpal)
color.bar(colpal, -1)
color.bar(colpal, min = 0, max = 100)
leg <- color.bar(colpal, min = 0, max = 100)
plot_grid(Bactr, Para, Alis, Prevo, leg, nrow = 3, ncol = 2 )
grad1<- c("#FFFFCC", "#FFF7B9","#FFEFA6","#FEE794","#FEDF83","#FED471","#FEC45F","#FEB44E","#FDA446","#FD943F","#FC7F38","#FC6530","#FA4B29","#F03523","#E51F1D","#D7111F","#C70623","#B30026","#990026","#800026")
grad2<- c("#deebf7", "#9ecae1", "#3182bd")
grad3<- c("#e5f5e0", "#a1d99b", "#31a354")
grad4<- c("#efedf5", "#bcbddc", "#756bb1")
#colpal<- colorRampPalette(brewer.pal(9,"YlOrRd"))(20) #color progression
colpal<- colorRampPalette(brewer.pal(11,"Spectral"))(20) #spectral progression
cc <- scales::seq_gradient_pal("blue", "red", "Lab")(seq(0,1,length.out=20))
#colpal<- sample(colpal(length(unique(PCOA$UserName))))
Bactr <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Bacteroides, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
#scale_fill_gradient(name = "category", low = "blue", high = "red")+
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Bacteroides ") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Para <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill =Parabacteroides, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
# scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Parabacteroides") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Alis <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Alistipes, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
#scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Alistipes ") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Prevo <- ggplot(PCOA, aes(x = PC1, y = PC2, group = User)) +
geom_point(aes(fill = Prevotella, color = ifelse(PCOA$UserName %in% id == TRUE, "you","z")),
alpha=1, pch = 21, size = 5) +
scale_fill_manual(values = colpal, guide_colorbar(direction = "horizontal")) +
#scale_fill_manual(values = colpal, guides(fill=FALSE)) +
scale_color_manual(values = c("black", "dark grey"), guides(fill=FALSE)) +
#scale_shape_manual(values = shape_pal3) +
stat_ellipse(color = "dark grey", type = "norm", linetype = 2, level = 0.95) +
labs(title="Relative Abundance of Prevotella") +
#guides(fill = guide_legend(override.aes = list(alpha=1)), size = FALSE, col = FALSE) +
#guides(size = FALSE, fill = FALSE) +
theme_classic(base_family = "Helvetica") +
theme(plot.title = element_text(size = 14, hjust = 0.5) ,
legend.position = "none")
plot_grid(Bactr, Para, Alis, Prevo, nrow = 2, ncol = 2 )
color.bar <- function(lut, min, max=-min, nticks=11, ticks=seq(min, max, len=nticks), title='') {
scale = (length(lut)-1)/(max-min)
dev.new(width=1.75, height=5)
plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
color.bar(colpal, min = 0, max = 100)
dev.new(width=1, height=5)
color.bar <- function(lut, min, max=-min, nticks=11, ticks=seq(min, max, len=nticks), title='') {
scale = (length(lut)-1)/(max-min)
dev.new(width=1, height=5)
plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
color.bar(colpal, min = 0, max = 100)
dev.new(width=1.75, height=5)
color.bar <- function(lut, min, max=-min, nticks=11, ticks=seq(min, max, len=nticks), title='') {
scale = (length(lut)-1)/(max-min)
dev.new(width=1.75, height=5)
plot(c(0,10), c(min,max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
color.bar(colpal, min = 0, max = 100)
plot(c(0,10), c(max, min), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
color.bar <- function(lut, min, max=-min, nticks=11, ticks=seq(min, max, len=nticks), title='') {
scale = (length(lut)-1)/(max-min)
dev.new(width=1.75, height=5)
plot(c(0,10), c(max, min), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
color.bar(colpal, min = 0, max = 100)
```{r legend, fig.width=5, fig.height=1}
color.bar <- function(lut, min, max=-min, nticks=11, ticks=seq(min, max, len=nticks), title='') {
scale = (length(lut)-1)/(max-min)
dev.new(width=1.75, height=5)
plot(c(0,10), c(min, max), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)
axis(2, ticks, las=1)
for (i in 1:(length(lut)-1)) {
y = (i-1)/scale + min
rect(0,y,10,y+1/scale, col=lut[i], border=NA)
}
}
color.bar(colpal, min = 0, max = 100)
source('~/Documents/Projects/zebra/bin/makepdf.R', echo=TRUE)
source('~/Documents/Projects/zebra/bin/makepdf.R', echo=TRUE)
taxa <- read.delim(file = "Documents/Projects/dietstudy/data/shogun_results_dietstudy_170822/embalmer_taxatable.txt", comment = "", row.names = 1)
colnames(taxa) <- gsub(".S[0-9]+.R1.001","",colnames(taxa))      # Clean old plate IDs
taxa <- taxa[,order(colnames(taxa))]              # Sort nicely by sample ID
taxa <- taxa[,-(grep("L0",colnames(taxa))-1)]    # Keep new runs only
colnames(taxa) <- gsub(".S[0-9]+.L001.R1.001","",colnames(taxa)) # Clean new plate IDs
taxa <- taxa[,-(grep("Blank", colnames(taxa)))]
taxa <- taxa[, colSums(taxa) > 20000]
taxa <- read.delim(file = "Documents/Projects/dietstudy/data/shogun_results_dietstudy_170822/embalmer_taxatable.txt", comment = "", row.names = 1)
taxa <- read.delim(file = "~Documents/Projects/dietstudy/data/shogun_results_dietstudy_170822/embalmer_taxatable.txt", comment = "", row.names = 1)
taxa <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_dietstudy_170822/embalmer_taxatable.txt", comment = "", row.names = 1)
colnames(taxa) <- gsub(".S[0-9]+.R1.001","",colnames(taxa))      # Clean old plate IDs
taxa <- taxa[,order(colnames(taxa))]              # Sort nicely by sample ID
taxa <- taxa[,-(grep("L0",colnames(taxa))-1)]    # Keep new runs only
colnames(taxa) <- gsub(".S[0-9]+.L001.R1.001","",colnames(taxa)) # Clean new plate IDs
taxa <- taxa[,-(grep("Blank", colnames(taxa)))]
taxa <- taxa[, colSums(taxa) > 20000]
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt", sep = "\t")
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt", sep = "\t", quote = F, header = T)
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt", sep = "\t", quote = F)
View(taxa)
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt",
sep = "\t",
quote = F,
row.names = T,
col.names = T)
View(taxa)
library(tibble)
taxa <- taxa[, colSums(taxa) > 20000]
taxa <- column_to_rownames(taxa, var = "#OTU")
taxa <- rownames_to_column(taxa, var = "#OTU")
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt",
sep = "\t",
quote = F,
row.names = T,
col.names = T)
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt",
sep = "\t",
quote = F,
col.names = T)
View(taxa)
taxa <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_dietstudy_170822/embalmer_taxatable.txt", comment = "", row.names = 1)
colnames(taxa) <- gsub(".S[0-9]+.R1.001","",colnames(taxa))      # Clean old plate IDs
taxa <- taxa[,order(colnames(taxa))]              # Sort nicely by sample ID
taxa <- taxa[,-(grep("L0",colnames(taxa))-1)]    # Keep new runs only
colnames(taxa) <- gsub(".S[0-9]+.L001.R1.001","",colnames(taxa)) # Clean new plate IDs
taxa <- taxa[,-(grep("Blank", colnames(taxa)))]
taxa <- taxa[, colSums(taxa) > 20000]
taxa <- rownames_to_column(taxa, var = "#OTU")
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt",
sep = "\t",
quote = F,
col.names = T)
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt",
sep = "\t",
quote = F,
col.names = T,
row.names = F)
library(tibble)
taxa <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_dietstudy_170822/embalmer_taxatable.txt", comment = "", row.names = 1)
colnames(taxa) <- gsub(".S[0-9]+.R1.001","",colnames(taxa))      # Clean old plate IDs
taxa <- taxa[,order(colnames(taxa))]              # Sort nicely by sample ID
taxa <- taxa[,-(grep("L0",colnames(taxa))-1)]    # Keep new runs only
colnames(taxa) <- gsub(".S[0-9]+.L001.R1.001","",colnames(taxa)) # Clean new plate IDs
taxa <- taxa[,-(grep("Blank", colnames(taxa)))]
taxa <- taxa[, colSums(taxa) > 20000]
taxa <- rownames_to_column(taxa, var = "#OTU")
write.table(taxa, file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/embalmer_taxatable_clean.txt",
sep = "\t",
quote = F,
col.names = T,
row.names = F)
funs <- read.table(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt")
funs <- read.table(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt")
View(funs)
funs <- read.table(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt",
comment = "", header = T)
funs <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt",
comment = "", header = T)
View(funs)
funs <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt",
comment = "", header = T)
View(funs)
bglu <- funs["X.KEGG.ID" == "K01195",]
bglu <- funs[,"X.KEGG.ID" == "K01195"]
bglu <- funs["X.KEGG.ID" == "K01195"]
bglu <- funs["X.KEGG.ID" == "K01195",]
View(bglu)
bglu <- funs["X.KEGG.ID" == "K01195",]
funs <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt",
comment = "", header = T, stringsAsFactors = F)
bglu <- funs["X.KEGG.ID" == "K01195",]
bglu <- funs[funs$X.KEGG.ID" == "K01195",]
bglu <- funs[funs$X.KEGG.ID == "K01195",]
View(bglu)
hist(bglu)
funs <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt",
comment = "", header = T, stringsAsFactors = F, row.names = T)
funs <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt",
comment = "", header = T, stringsAsFactors = F, row.names = 1)
bglu <- funs[rownames(funs) == "K01195",]
View(bglu)
hist(bglu)
funs <- read.delim(file = "~/Documents/Projects/dietstudy/data/shogun_results_cleaned/shogun_function/filtered_functions/embalmer_taxatable_clean.species.kegg.txt",
comment = "", header = T, stringsAsFactors = F, row.names = 1)
funs <- funs*1
bglu <- funs[rownames(funs) == "K01195",]
hist(bglu)
View(bglu)
hist(bglu)
hist(bglu[1])
hist(bglu[,1])
hist(bglu[1,])
hist(funs[rownames(funs) == "K01195",])
hist(t(bglu))
bglu <- t(funs[rownames(funs) == "K01195",])
View(bglu)
hist(bglu)
plot(bglu)
myhist <- hist(bglu)
myhist
