plot <- merge(micro_order, food_order)
plot <- plot %>%
filter(#UserName != "MCTs11", #Soylent
#UserName != "MCTs12", #Soylent
UserName != "MCTs02", #Dropped
UserName != "MCTs17", #Dropped
UserName != "MCTs30", #Dropped
#UserName != "MCTs06", #Infrequent bowel movements
#UserName != "MCTs29"  #Infrequent bowel movements
)
ggplot(plot, aes(y = food_cloud, x = ave_cloud)) +
geom_smooth(method = "lm", color = "black", fill = "grey") +
geom_point(aes(fill = UserName), size = 3, color = subject_cols) +
geom_point(aes(fill = UserName), shape = 1, size =3, color = "black") +
theme(legend.position = "none",
axis.title = element_text(size = 10)) +
labs(y = "Food mean distance to self", x = "Microbiome mean distance to self")
cor.test(plot$food_cloud, plot$ave_cloud, method = "spearman")
# calculate the fold difference for the mean variation
# first drop subjects
micro_order <- micro_order #%>% filter(UserName != "MCTs06", UserName != "MCTs29")
max(micro_order$ave_cloud)/min(micro_order$ave_cloud)
food_order <- food_order #%>% filter(UserName != "MCTs06", UserName != "MCTs29")
max(food_order$food_cloud)/min(food_order$food_cloud)
# # first get tax average per subject using CLR
tax_subject <- read.delim("data/processed_UN_tax/UN_taxonomy_clr_g.txt", row = 1)
# Sort by average abundance
tax_subject <- tax_subject[order(rowMeans(tax_subject),decreasing=T),]
# subset to same number of subjects
tax_subject <- tax_subject[,colnames(tax_subject) %in% micro_order$UserName]
micro_order <- micro_order[micro_order$UserName %in% colnames(tax_subject),]
micro_order <- micro_order[order(micro_order$UserName),]
# get correlations pvalues
pvals <- apply(tax_subject, 1, function(x) {cor.test(x, micro_order$ave_cloud, method = "pearson")$p.value})
cors <- apply(tax_subject, 1, function(x) {cor(x, micro_order$ave_cloud, method = "pearson")})
qvals <- p.adjust(pvals, method = "fdr")
qvals <- qvals[qvals <= 0.25]
qvals <- as.data.frame(qvals)
cors <- as.data.frame(cors)
# nothing correlated significantly with median beta diversity if we leave out the outliers
# if we include the outliers, then
out <- merge(qvals, cors, by = 0)
out <- out[order(out$qvals, decreasing = F),]
out <- remove_rownames(out)
colnames(out)[1] <- "Taxa"
out
plot <- as.data.frame(t(tax_subject))
plot <- plot[,colnames(plot) %in% out$Taxa]
plot <- rownames_to_column(plot, var = "UserName")
plot <- merge(micro_order, plot)
colnames(plot) <- gsub("?.*g__", "", colnames(plot))
colnames(plot) <- gsub("\\/", "_", colnames(plot))
colnames(plot) <- gsub("\\-", "_", colnames(plot))
out$Taxa <- gsub("?.*g__", "", out$Taxa)
out$Taxa <- gsub("\\/", "_", out$Taxa)
out$Taxa <- gsub("\\-", "_", out$Taxa)
out <- remove_rownames(out)
out <- column_to_rownames(out, var = "Taxa")
for (i in colnames(plot[,3:ncol(plot)])) {
rho <- paste("italic(r) == ", round(out[i,"cors"], 3))
q <- paste("italic(qval) ==", round(out[i,"qvals"], 3))
labels = data.frame(x = quantile(plot[,i])[3], y =quantile(plot[,"ave_cloud"])[1],
label = paste(rho, q, sep = " ~ "))
print(ggplot(data = plot, aes_string(x = i, y = "ave_cloud")) +
geom_smooth(method = "lm", color = "black", fill = "grey") +
geom_point(aes(fill = UserName), color = subject_cols, size = 3) +
geom_point(aes(fill = UserName), shape = 1, size =3, color = "black") +
theme(legend.position = "none") +
geom_text(data = labels, aes(x=x, y=y,
label = label),
parse = T, size = 3) +
labs(y = "Microbiome variability"))
}
# Are any foods associated with beta-diversity cloud size?
food <- read.table("data/processed_food/dhydrt.otu.txt", header = T, sep = "\t", comment = "")
# get the foods in the correct format
food <- remove_rownames(food)
food <- column_to_rownames(food, var = "taxonomy")
food <- food %>% select(-X.FoodID)
# collapse by taxa level 3
split <- strsplit(rownames(food),";")             # Split and rejoin on lv7 to get species level
foodStrings <- sapply(split,function(x) paste(x[1:3],collapse=";"))
food <- rowsum(food,foodStrings)              # Collapse by taxonomy name
# Sort by average abundance
food <- food[order(rowMeans(food),decreasing=T),]
# summarize by person
#initiate the dataframe with the correct information
food_subject <- data.frame(matrix(nrow=nrow(food), ncol=0))
rownames(food_subject) <- rownames(food)
# fix naming of food_map
colnames(food_map)[1] <- "X.SampleID"
#loop through and summarize by username
for (i in unique(food_map$UserName)){
subgroup <- food_map[food_map$UserName == i,]
if(dim(subgroup)[1] <= 4){
NULL
}else{
sub <- food[(colnames(food) %in% subgroup[,"X.SampleID"])]
tmp <- as.data.frame(rowMeans(sub))
colnames(tmp) <- i
food_subject <- cbind(food_subject,tmp)
}
}
# Normalize
food_subject <- sweep(food_subject, 2, colSums(food_subject), "/")
# Sort by average abundance
food_subject <- food_subject[order(rowMeans(food_subject),decreasing=T),]
# drop low abundance foods
food_subject <- food_subject[rowMeans(food_subject) >= 0.001,]
#food_subject <- food_subject %>% select(-MCTs09)
# subset to same number of subjects
food_subject <- food_subject[,colnames(food_subject) %in% micro_order$UserName]
micro_order <- micro_order[micro_order$UserName %in% colnames(food_subject),]
micro_order <- micro_order[order(micro_order$UserName),]
# get correlations pvalues
pvals <- apply(food_subject, 1, function(x) {cor.test(x, micro_order$ave_cloud, method = "spearman", exact = F)$p.value})
cors <- apply(food_subject, 1, function(x) {cor(x, micro_order$ave_cloud, method = "spearman")})
qvals <- p.adjust(pvals, method = "fdr")
qvals <- qvals[qvals <= 0.25]
qvals <- as.data.frame(qvals)
cors <- as.data.frame(cors)
# nothing correlated significantly with median beta diversity if we leave out the outliers
# if we include the outliers, then
out <- merge(qvals, cors, by = 0)
out <- out[order(out$qvals, decreasing = F),]
out <- remove_rownames(out)
colnames(out)[1] <- "Species"
out
#betad as matrix
betadiv <- data.frame(pcoa(food_beta)$vectors)
# move rownames to a column
betadiv <- rownames_to_column(betadiv, var = "X.SampleID")
#merge map and PCOA by SampleID - select both lines and run together - won't work otherwise
betadiv <- inner_join(betadiv, map, by = 'X.SampleID')
# drop dropouts
betadiv <- betadiv %>%
filter(#UserName != "MCTs11", #Soylent
#UserName != "MCTs12", #Soylent
UserName != "MCTs02", #Dropped
UserName != "MCTs17", #Dropped
UserName != "MCTs30" #Dropped
#UserName != "MCTs06", #Infrequent bowel movements
#UserName != "MCTs29"  #Infrequent bowel movements
)
Axis.1.2 <- ggplot(betadiv, aes(x = Axis.1, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Dietary Beta-diversity \n(Unweighted Unifrac)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Axis.2.3 <- ggplot(betadiv, aes(x = Axis.3, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Dietary Beta-diversity \n(Unweighted Unifrac)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
plot_grid(Axis.1.2, Axis.2.3)
Axis1.day <- ggplot(betadiv, aes(x = StudyDayNo, y = Axis.1, fill = UserName, droplevels = TRUE)) +
geom_line(color = "grey") +
geom_point(color = "black", alpha=0.75, pch = 21, size = 3) +
scale_fill_manual(values = subject_cols) +
facet_wrap(~UserName)+
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 3),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 7),
strip.background = element_rect(color = "grey", fill = "white"))
Axis2.day <- ggplot(betadiv, aes(x = StudyDayNo, y = Axis.2, fill = UserName, droplevels = TRUE)) +
geom_line(color = "grey") +
geom_point(color = "black", alpha=0.75, pch = 21, size = 3) +
scale_fill_manual(values = subject_cols) +
facet_wrap(~UserName)+
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(size = 3),
axis.ticks.x = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 7),
strip.background = element_rect(color = "grey", fill = "white"))
Axis3.day <- ggplot(betadiv, aes(x = StudyDayNo, y = Axis.3, fill = UserName, droplevels = TRUE)) +
geom_line(color = "grey") +
geom_point(color = "black", alpha=0.75, pch = 21, size = 3) +
scale_fill_manual(values = subject_cols) +
facet_wrap(~UserName)+
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(size = 3),
axis.ticks.x = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = 0.5),
strip.text = element_text(size = 7),
strip.background = element_rect(color = "grey", fill = "white"))
plot_grid(Axis1.day,Axis2.day, Axis3.day, ncol = 1)
#betad as matrix
betadiv <- data.frame(pcoa(tax_beta)$vectors)
# move rownames to a column
betadiv <- rownames_to_column(betadiv, var = "X.SampleID")
#merge map and PCOA by SampleID - select both lines and run together - won't work otherwise
betadiv <- inner_join(betadiv, map, by = 'X.SampleID')
# drop dropouts
betadiv <- betadiv %>%
filter(#UserName != "MCTs11", #Soylent
#UserName != "MCTs12", #Soylent
UserName != "MCTs02", #Dropped
UserName != "MCTs17", #Dropped
UserName != "MCTs30" #Dropped
#UserName != "MCTs06", #Infrequent bowel movements
#UserName != "MCTs29"  #Infrequent bowel movements
)
Axis.1.2 <- ggplot(betadiv, aes(x = Axis.1, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Axis.2.3 <- ggplot(betadiv, aes(x = Axis.3, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
plot_grid(Axis.1.2, Axis.2.3)
betataxa
tax <- read.delim("data/processed_tax/taxonomy_norm_s.txt", sep = "\t", row.names = 1)
tax_beta <- as.matrix(vegdist(t(tax), method = "bray", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE))
View(tax_beta)
tax <- read.delim("data/processed_tax/taxonomy_norm_s.txt", sep = "\t", row.names = 1)
tax_beta <- as.matrix(vegdist(t(tax), method = "bray", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE))
View(tax_beta)
test <- dist(tax_beta)
test <- pcoa(tax_beta)
tax_beta <- dist(tax_beta)
# import beta diversity
food_beta <- read.delim("data/processed_food/dhydrt_beta/unweighted_unifrac_dhydrt.otu.txt", sep = "\t", row.names = 1)
#normalized taxonomy
#tax_beta <- read.delim("data/processed_tax/taxa_beta/bray_curtis_taxonomy_norm_s.txt", sep = "\t", row.names = 1)
tax <- read.delim("data/processed_tax/taxonomy_norm_s.txt", sep = "\t", row.names = 1)
tax_beta <- as.matrix(vegdist(t(tax), method = "bray", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE))
tax_beta <- dist(tax_beta)
# clr taxonomy
#tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
#tax_beta <- as.matrix(vegdist(t(tax), method = "euclidian"))
# import matching maps
food_map <- read.table("data/maps/food_map.txt", header = T, sep = "\t", comment = "")
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# calculate mean of the mean distance to self for each sample, for each UserName (food)
mydist <- NULL
for (i in unique(food_map$UserName)) {
name <- food_map[food_map$UserName == i,1]
name <- as.vector(name)
tmp <- food_beta[rownames(food_beta) %in% name, colnames(food_beta) %in% name]
num <- rowMeans(tmp, na.rm = T)
num <- cbind(i,num)
mydist <- rbind(num, mydist)
colnames(mydist) <- c("UserName", "food_mean_beta_div")
}
food_dist <- as.data.frame(mydist)
food_dist$food_mean_beta_div <- as.character(food_dist$food_mean_beta_div)
food_dist$food_mean_beta_div <- as.numeric(food_dist$food_mean_beta_div)
mydist <- NULL
for (i in unique(tax_map$UserName)) {
name <- tax_map[tax_map$UserName == i,1]
name <- as.vector(name)
tmp <- tax_beta[rownames(tax_beta) %in% name, colnames(tax_beta) %in% name]
num <- rowMeans(tmp, na.rm = T)
num <- cbind(i,num)
mydist <- rbind(num, mydist)
colnames(mydist) <- c("UserName", "mean_beta_div")
}
# import beta diversity
food_beta <- read.delim("data/processed_food/dhydrt_beta/unweighted_unifrac_dhydrt.otu.txt", sep = "\t", row.names = 1)
#normalized taxonomy
#tax_beta <- read.delim("data/processed_tax/taxa_beta/bray_curtis_taxonomy_norm_s.txt", sep = "\t", row.names = 1)
tax <- read.delim("data/processed_tax/taxonomy_norm_s.txt", sep = "\t", row.names = 1)
tax_beta <- as.matrix(vegdist(t(tax), method = "bray", binary=FALSE, diag=FALSE, upper=FALSE,
na.rm = FALSE))
# clr taxonomy
#tax <- read.delim("data/processed_tax/taxonomy_clr.txt", sep ="\t", row.names = 1)
#tax_beta <- as.matrix(vegdist(t(tax), method = "euclidian"))
# import matching maps
food_map <- read.table("data/maps/food_map.txt", header = T, sep = "\t", comment = "")
tax_map <- read.table("data/maps/taxonomy_norm_map.txt", header = T, sep = "\t", comment = "")
# calculate mean of the mean distance to self for each sample, for each UserName (food)
mydist <- NULL
for (i in unique(food_map$UserName)) {
name <- food_map[food_map$UserName == i,1]
name <- as.vector(name)
tmp <- food_beta[rownames(food_beta) %in% name, colnames(food_beta) %in% name]
num <- rowMeans(tmp, na.rm = T)
num <- cbind(i,num)
mydist <- rbind(num, mydist)
colnames(mydist) <- c("UserName", "food_mean_beta_div")
}
food_dist <- as.data.frame(mydist)
food_dist$food_mean_beta_div <- as.character(food_dist$food_mean_beta_div)
food_dist$food_mean_beta_div <- as.numeric(food_dist$food_mean_beta_div)
mydist <- NULL
for (i in unique(tax_map$UserName)) {
name <- tax_map[tax_map$UserName == i,1]
name <- as.vector(name)
tmp <- tax_beta[rownames(tax_beta) %in% name, colnames(tax_beta) %in% name]
num <- rowMeans(tmp, na.rm = T)
num <- cbind(i,num)
mydist <- rbind(num, mydist)
colnames(mydist) <- c("UserName", "mean_beta_div")
}
tax_dist <- as.data.frame(mydist)
tax_dist <- droplevels(tax_dist)
tax_dist$mean_beta_div <- as.character(tax_dist$mean_beta_div)
tax_dist$mean_beta_div <- as.numeric(tax_dist$mean_beta_div)
#betad as matrix
betadiv <- data.frame(pcoa(dist(tax_beta))$vectors)
# move rownames to a column
betadiv <- rownames_to_column(betadiv, var = "X.SampleID")
#merge map and PCOA by SampleID - select both lines and run together - won't work otherwise
betadiv <- inner_join(betadiv, map, by = 'X.SampleID')
# drop dropouts
betadiv <- betadiv %>%
filter(#UserName != "MCTs11", #Soylent
#UserName != "MCTs12", #Soylent
UserName != "MCTs02", #Dropped
UserName != "MCTs17", #Dropped
UserName != "MCTs30" #Dropped
#UserName != "MCTs06", #Infrequent bowel movements
#UserName != "MCTs29"  #Infrequent bowel movements
)
Axis.1.2 <- ggplot(betadiv, aes(x = Axis.1, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Axis.2.3 <- ggplot(betadiv, aes(x = Axis.3, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
plot_grid(Axis.1.2, Axis.2.3)
#betad as matrix
betadiv <- data.frame(pcoa(tax_beta)$vectors)
# move rownames to a column
betadiv <- rownames_to_column(betadiv, var = "X.SampleID")
#merge map and PCOA by SampleID - select both lines and run together - won't work otherwise
betadiv <- inner_join(betadiv, map, by = 'X.SampleID')
# drop dropouts
betadiv <- betadiv %>%
filter(#UserName != "MCTs11", #Soylent
#UserName != "MCTs12", #Soylent
UserName != "MCTs02", #Dropped
UserName != "MCTs17", #Dropped
UserName != "MCTs30" #Dropped
#UserName != "MCTs06", #Infrequent bowel movements
#UserName != "MCTs29"  #Infrequent bowel movements
)
Axis.1.2 <- ggplot(betadiv, aes(x = Axis.1, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Axis.2.3 <- ggplot(betadiv, aes(x = Axis.3, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
plot_grid(Axis.1.2, Axis.2.3)
betadiv <- data.frame(pcoa(dist(tax_beta))$vectors)
#betad as matrix
betadiv <- data.frame(pcoa(dist(tax_beta))$vectors)
# move rownames to a column
betadiv <- rownames_to_column(betadiv, var = "X.SampleID")
#merge map and PCOA by SampleID - select both lines and run together - won't work otherwise
betadiv <- inner_join(betadiv, map, by = 'X.SampleID')
# drop dropouts
betadiv <- betadiv %>%
filter(#UserName != "MCTs11", #Soylent
#UserName != "MCTs12", #Soylent
UserName != "MCTs02", #Dropped
UserName != "MCTs17", #Dropped
UserName != "MCTs30" #Dropped
#UserName != "MCTs06", #Infrequent bowel movements
#UserName != "MCTs29"  #Infrequent bowel movements
)
Axis.1.2 <- ggplot(betadiv, aes(x = Axis.1, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Axis.2.3 <- ggplot(betadiv, aes(x = Axis.3, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
plot_grid(Axis.1.2, Axis.2.3)
#betad as matrix
betadiv <- data.frame(pcoa(tax_beta)$vectors)
# move rownames to a column
betadiv <- rownames_to_column(betadiv, var = "X.SampleID")
#merge map and PCOA by SampleID - select both lines and run together - won't work otherwise
betadiv <- inner_join(betadiv, map, by = 'X.SampleID')
# drop dropouts
betadiv <- betadiv %>%
filter(#UserName != "MCTs11", #Soylent
#UserName != "MCTs12", #Soylent
UserName != "MCTs02", #Dropped
UserName != "MCTs17", #Dropped
UserName != "MCTs30" #Dropped
#UserName != "MCTs06", #Infrequent bowel movements
#UserName != "MCTs29"  #Infrequent bowel movements
)
Axis.1.2 <- ggplot(betadiv, aes(x = Axis.1, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Axis.2.3 <- ggplot(betadiv, aes(x = Axis.3, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
plot_grid(Axis.1.2, Axis.2.3)
?dist()
betadiv <- data.frame(pcoa(as.dist(tax_beta))$vectors)
#betad as matrix
betadiv <- data.frame(pcoa(as.dist(tax_beta))$vectors)
# move rownames to a column
betadiv <- rownames_to_column(betadiv, var = "X.SampleID")
#merge map and PCOA by SampleID - select both lines and run together - won't work otherwise
betadiv <- inner_join(betadiv, map, by = 'X.SampleID')
# drop dropouts
betadiv <- betadiv %>%
filter(#UserName != "MCTs11", #Soylent
#UserName != "MCTs12", #Soylent
UserName != "MCTs02", #Dropped
UserName != "MCTs17", #Dropped
UserName != "MCTs30" #Dropped
#UserName != "MCTs06", #Infrequent bowel movements
#UserName != "MCTs29"  #Infrequent bowel movements
)
Axis.1.2 <- ggplot(betadiv, aes(x = Axis.1, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
Axis.2.3 <- ggplot(betadiv, aes(x = Axis.3, y = Axis.2, fill = UserName)) +
geom_point(color = "black", alpha=0.75, pch = 21, size = 2) +
stat_ellipse(aes(color = UserName), type = "norm", linetype = 2, level = 0.95, alpha = 0.3) +
scale_fill_manual(values = subject_cols) +
scale_color_manual(values = subject_cols) +
labs(title="Microbiome Beta-diversity \n(Bray-Curtis)") +
theme_classic() +
theme(plot.title = element_text(size = 14, hjust = 0.5),
legend.position = "none")
plot_grid(Axis.1.2, Axis.2.3)
source('~/Documents/Projects/zebra/bin/makepdf.R', echo=TRUE)
source('~/Documents/Projects/zebra/bin/makepdf.R', echo=TRUE)
