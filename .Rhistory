my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
colnames()
colnames(cnames)
colnames(my_data) <- cnames
my_data
install.packages("rafalib")
library("rafalib")
install.packages("swirl")
library("swirl")
version
swirl()
5+7
x <- 5+ 7
x
y <- x-3
y
c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?
end
?c
z
x <- (z,555,z)
x <- c(z,555,z)
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 100
z * 2 + 1000
my_div
1:20
pi:10
15:1
?:
:?
"`"
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- "My", "name", "is"
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name(c(my_char, "Arzang"))
my_name<- c(my_char, "Arzang")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello","world", sep=" ")
paste("Hello","world!", sep=" ")
paste(1:3, c("x"."y","z"), sep="")
paste(c(1:3), c("x"."y","z"), sep="")
paste(1:3, c("x""y","z"), sep="")
paste(1:3, c("x","y","z"), sep="")
paste(1:3, c("x", "y", "z"), sep = "")
(1:3, c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep ="-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum==1
s
s
?
quit
info()
sum(my_na==1)
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo =11, bar =2, norf =NA)
vect
names(vect)
vect2 <- c(11,2,Na)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf"
)
identical(vect1,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo"),"bar"]
vect[c("foo", "bar")]
library(swirl)
swirl()
info()
main()
ls
swirl
swirl()
sswirl())
swirl()
library(swirl)
swirl()
library(rmarkdown)
library(knitr)
library(ggplot2)
library(reshape2)
library(tibble)
library(data.table)
library(vegan)
library(ape)
library(RColorBrewer)
library(dplyr)
library(extrafont)
setwd("C:/Users/arzan/Desktop/Bioinformatics/MCT/GIT/zebra")
#### Read in mapping file ####
map <- read.table("raw/new_map_with_treatment.txt", sep = "\t", header = TRUE, comment = "")
#### Read in taxa table ####
taxa <- read.delim("raw/youbet.txt", row =1)
#### Summarizing ####
split <- strsplit(rownames(taxa),";")                               # Split and rejoin on lv7
taxaStrings <- sapply(split,function(x) paste(x[1:7],collapse=";")) # level 7 is species, 8 is strain
taxa <- rowsum(taxa,taxaStrings)
taxa = taxa[,colSums(taxa)>=20000]                  #use taxa var to create OTU table (counts)
staxa = taxa                                         #staxa is utilized for relative abundances, taxa for counts
staxa = sweep(staxa,2,colSums(staxa),'/');           # Normalize
staxa = staxa[order(rowMeans(staxa),decreasing=F),]; # Sort by avg. abundance
staxa = staxa[rowMeans(staxa) >= 0.0001,];            # Drop rare taxa (abundance)
staxa = staxa[rowSums(staxa > 0) > 10,];             # Drop rare taxa (prevalence)
for (id in unique(map$UserName)){
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE)
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/7.14.output")
}
meltdf<- melt(subtaxasp)
#merge to get access to Day var
mergedf<- merge(x=meltdf, y=map, by.x = "variable", by.y= "X.SampleID", all.x=TRUE)
#convert our dataframe species (rn) column to a character
mergedf$rn <- as.character(mergedf$rn)
#series of gsub commands meant to neaten and clarify legend content
mergedf$rn <- gsub(".*s__", "", mergedf$rn)
mergedf$rn <- gsub("\\[", "",mergedf$rn)
mergedf$rn <- gsub("\\]", "",mergedf$rn)
mergedf$rn <- gsub("_", " ",mergedf$rn)
#create <10% abundance category
mergedf$rn[mergedf$value < 0.07] <- "<7% abundance"
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
ggplot(mergedf, aes(x = StudyDayNo, y = value, fill = rn)) +
geom_bar(stat = "identity") +
scale_x_discrete(drop = FALSE) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(strip.text.y = element_text(angle = 0, size = 8, face = "italic", family = "Helvetica"),
axis.text.x = element_text(angle = 45, hjust = 1, family = "Helvetica"),
axis.title.x = element_blank(),
plot.title =  element_text(hjust = 0.5, family = "Helvetica"),
strip.background = element_rect(color = "grey")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 1,
keyheight = 1,
ncol = 1,
title= "Bacterial Species")) +
ylab("Relative Abundance\n") +
ggtitle("Main species within your gut per day")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
```
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
scale_color_manual(values=colpal)+
#theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
#scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
# scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
# scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
scale_color_manual(values=colpal)+
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
scale_color_manual(values=colpal)+
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c("1"))
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
seq[1:17]
seq(1:17)
tick_label <- seq(1:17)
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
tick_label <- seq(1:17)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
scale_color_manual(values=colpal)+
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
colpal<- colorRampPalette(brewer.pal(9,"Set3"))(37)
tick_label <- seq(1:17)
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
scale_color_manual(values=colpal)+
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
ggplot(long_plot, aes(x = X.SampleID, y = KCAL*PCT, fill = Macro)) +
geom_bar(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
theme_classic() +
scale_color_manual(values=colpal)+
scale_fill_brewer(palette = "Set2") +
scale_x_discrete(labels=c(tick_label))+
labs(fill = "% Macronutrient", y = "Daily reported intake (Kcal)", x = "Study Day Number") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
axis.title.x =element_text(family = "Helvetica"), axis.title.y =element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.5))+
ggtitle("Daily Micronutrient Consumption as a percentage of Kilocalorie Intake")
ggplot(long_plot, aes(x = X.SampleID, y = KCAL*PCT, fill = Macro)) +
geom_bar(stat = "identity") +
facet_grid(.~UserName, scales = "free") +
theme_classic() +
scale_color_manual(values=colpal)+
scale_fill_brewer(palette = "Set2") +
scale_x_discrete(labels=c(tick_label))+
labs(fill = "% Macronutrient", y = "Daily reported intake (Kcal)", x = "Study Day Number") +
theme(
axis.title.x =element_text(family = "Helvetica"), axis.title.y =element_text(family = "Helvetica"),
plot.title = element_text(hjust = 0.5))+
ggtitle("Daily Micronutrient Consumption as a percentage of Kilocalorie Intake")
ggplot(mergedf, aes(x = StudyDayNo, y = value, fill = rn)) +
geom_bar(stat = "identity") +
scale_x_discrete(drop = FALSE,labels=c(tick_label)) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(strip.text.y = element_text(angle = 0, size = 8, face = "italic", family = "Helvetica"),
axis.text.x = element_text(angle = 45, hjust = 1, family = "Helvetica"),
axis.title.x = element_blank(),
plot.title =  element_text(hjust = 0.5, family = "Helvetica"),
strip.background = element_rect(color = "grey")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 1,
keyheight = 1,
ncol = 1,
title= "Bacterial Species")) +
ylab("Relative Abundance\n") +
xlab("Study Day Number")+
ggtitle("Main species within your gut per day")
ggplot(mergedf, aes(x = StudyDayNo, y = value, fill = rn)) +
geom_bar(stat = "identity") +
scale_x_discrete(drop = FALSE,labels=c(tick_label)) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(strip.text.y = element_text(angle = 0, size = 8, face = "italic", family = "Helvetica"),
axis.text.x = element_text( hjust = 1, family = "Helvetica"),
axis.title.x = element_blank(),
plot.title =  element_text(hjust = 0.5, family = "Helvetica"),
strip.background = element_rect(color = "grey")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 1,
keyheight = 1,
ncol = 1,
title= "Bacterial Species")) +
ylab("Relative Abundance\n") +
xlab("Study Day Number")+
ggtitle("Main species within your gut per day")
ggplot(mergedf, aes(x = StudyDayNo, y = value, fill = rn)) +
geom_bar(stat = "identity") +
scale_x_discrete(drop = FALSE,labels=c(tick_label)) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(strip.text.y = element_text(angle = 0, size = 8, face = "italic", family = "Helvetica"),
axis.text.x = element_text( hjust = 1, family = "Helvetica"),
axis.title.x = element_blank(),
plot.title =  element_text(hjust = 0.5, family = "Helvetica"),
strip.background = element_rect(color = "grey")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 1,
keyheight = 1,
ncol = 1,
title= "Bacterial Species")) +
ylab("Relative Abundance\n") +
xlab("Study Day Number\n")+
ggtitle("Main species within your gut per day")
ggplot(mergedf, aes(x = StudyDayNo, y = value, fill = rn)) +
geom_bar(stat = "identity") +
scale_x_discrete(drop = FALSE,labels=c(tick_label)) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(strip.text.y = element_text(angle = 0, size = 8, face = "italic", family = "Helvetica"),
axis.text.x = element_text( hjust = 1, family = "Helvetica"),
axis.title.x = element_blank(),
plot.title =  element_text(hjust = 0.5, family = "Helvetica"),
strip.background = element_rect(color = "grey")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 1,
keyheight = 1,
ncol = 1,
title= "Bacterial Species")) +
labs(y="Relative Abundance",x="Study Day Number")
ggtitle("Main species within your gut per day")
ggplot(mergedf, aes(x = StudyDayNo, y = value, fill = rn)) +
geom_bar(stat = "identity") +
scale_x_discrete(drop = FALSE,labels=c(tick_label)) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(strip.text.y = element_text(angle = 0, size = 8, face = "italic", family = "Helvetica"),
axis.text.x = element_text( hjust = 1, family = "Helvetica"),
plot.title =  element_text(hjust = 0.5, family = "Helvetica"),
strip.background = element_rect(color = "grey")) +
guides(fill = guide_legend(reverse = TRUE,
keywidth = 1,
keyheight = 1,
ncol = 1,
title= "Bacterial Species")) +
labs(y="Relative Abundance",x="Study Day Number")+
ggtitle("Main species within your gut per day")
for (id in unique(map$UserName)){
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE)
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/7.14.output")
}
for (id in unique(map$UserName)){
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE)
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/7.14.output")
}
for (id in unique(map$UserName)){
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE)
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/7.14.output")
}
id <- gsub("_", " ",id)
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName, size=4),alpha=.085) + #gives axes and item of focus
labs(title=" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA - "id) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName, size=4),alpha=.085) + #gives axes and item of focus
labs(title=" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA - " + id) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName, size=4),alpha=.085) + #gives axes and item of focus
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(hjust = 0.5))
for (id in unique(map$UserName)){
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE)
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/7.14.output")
}
