#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=ifelse(PCOA$UserName %in% id == TRUE,"black",colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
q
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=ifelse(PCOA$UserName %in% id == TRUE,"black",UserName), shape=UserName,size=4),alpha=.060, stroke=2) +#gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,size=4),alpha=.060, stroke=2) +#gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col="black", shape=UserName,size=4),alpha=.060, stroke=2) +#gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,size=ifelse(PCOA$UserName %in% id == TRUE,10,4)),alpha=.060, stroke=2) +#gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,size=ifelse(PCOA$UserName %in% id == TRUE,15,10)),alpha=.060, stroke=2) +#gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,15,10)),alpha=.060, stroke=2,size=10) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,15,10)),alpha=.160, stroke=2,size=10) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,15,10)),alpha=.060, stroke=2,size=10) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,10,5)),alpha=.060, stroke=2,size=5) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,10,5),legend=FALSE),alpha=.060, stroke=3) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,10,5),guides=FALSE),alpha=.060, stroke=3) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,10,5),guides=FALSE),alpha=.060, stroke=3,size=show.legend=FALSE) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,10,5),guides=FALSE),alpha=.060, stroke=3) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 20, hjust = 0.5))
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = colpal[1]),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)+
geom_hline(aes(size=.75,color="red"),yintercept = 25) + #Recommended fiber level
geom_hline(aes(size=.75,color="gold"),yintercept = fiber_average)  #Recommended fiber level
#fill = studydayno
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
scale_fill_manual(values = colpal)+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = colpal[1]),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)+
geom_hline(aes(size=.75,color="red"),yintercept = 25) + #Recommended fiber level
geom_hline(aes(size=.75,color="gold"),yintercept = fiber_average)  #Recommended fiber level
#fill = studydayno
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
scale_fill_manual(values = colpal)+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = colpal[1]),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)+
geom_hline(aes(size=.75,col="red"),yintercept = 25) + #Recommended fiber level
geom_hline(aes(size=.75,col="gold"),yintercept = fiber_average)  #Recommended fiber level
#fill = studydayno
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
scale_fill_manual(values = colpal)+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = colpal[1]),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)+
geom_hline(aes(size=.75,col="red"),yintercept = 25) + #Recommended fiber level
geom_hline(aes(size=.75,col="gold"),yintercept = fiber_average)  #Recommended fiber level
#fill = studydayno
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
scale_fill_manual(values = colpal)+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = colpal[1]),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)+
geom_hline(aes(size=1.75,col="red"),yintercept = 25) + #Recommended fiber level
geom_hline(aes(size=.75,col="gold"),yintercept = fiber_average)  #Recommended fiber level
#fill = studydayno
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
scale_fill_manual(values = colpal)+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = colpal[1]),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)+
geom_hline(aes(size=.75,col="red"),yintercept = 25) + #Recommended fiber level
geom_hline(aes(size=.75,col="gold"),yintercept = fiber_average)  #Recommended fiber level
#fill = studydayno
p+guides(fill=FALSE) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
scale_fill_manual(values = colpal)+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = colpal[1]),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)+
geom_hline(aes(size=.75,col="red"),yintercept = 25) + #Recommended fiber level
geom_hline(aes(size=.75,col="gold"),yintercept = fiber_average)  #Recommended fiber level
#fill = studydayno
p+guides(fill=T) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
scale_fill_manual(values = colpal)+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
p <- ggplot(submap,aes(x = StudyDayNo,y = FIBE)) +
geom_bar(aes(fill = colpal[1]),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)+
geom_hline(size=.75,col="red",yintercept = 25) + #Recommended fiber level
geom_hline(size=.75,col="gold",yintercept = fiber_average)  #Recommended fiber level
#fill = studydayno
p+guides(fill=F) +
theme_classic(base_family = "Helvetica")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c(tick_label))+
scale_fill_manual(values = colpal)+
labs(x="Study Day Number", y= "Fiber levels in grams")+
ggtitle("Daily Fiber Intake")
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output.7.23")
}
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output")
}
ggplot(PCOA) +
geom_point(aes(x=PC1,y=PC2, col=UserName, shape=UserName,
size=ifelse(PCOA$UserName %in% id == TRUE,15,5)),alpha=.060, stroke=3) + #gives axes and item of focus
#stat_ellipse(alpha = 0.3, geom="polygon", linetype=2, aes(x = PC1, y = PC2, fill = PCOA$UserName %in% id))+
labs(title=paste0(" Day-To-Day Variation in Beta Diversity of the Gut Microbiome - PCOA -  ", id) ) +
guides( colour = guide_legend(override.aes = list(size=5,alpha=1))) +
scale_shape_manual(values=shape_pal3) +
scale_color_manual(values=colpal)+
theme_classic(base_family = "Helvetica") +
theme(legend.position = "bottom", plot.title = element_text(size = 18, hjust = 0.5))
for (id in unique(map$UserName)){
#microbiome iteration
submap <- map[map$UserName == id,] #create submap variable we can use to iterate through
subtaxa <- staxa[(colnames(staxa) %in% submap[,"X.SampleID"])] #create subtaxa variable - looks at each subject individually
# sort the subtaxa df by abundance
subtaxa <- subtaxa[order(rowMeans(subtaxa), decreasing = TRUE),]
subtaxasp <- setDT(subtaxa, keep.rownames=TRUE) #make rownames first column of frame
#food iteration
macro_totals <-  round(mean(submap$PROT),2) +  round(mean(submap$TFAT),2) + round(mean(submap$CARB),2)
sub_foodmap <- merged_food[merged_food$UserName == id,] #sub food variable allows us to access one subject at a time (like submap)
sub_food <- food_map[(colnames(food_map) %in% sub_foodmap[,"variable"])]#sub food variable looks at each subject individually
sub_foodsp <- setDT(sub_food, keep.rownames = TRUE) #make rownames first column of frame
#alpha diversity iteration
subtaxaalpha <- taxa[(colnames(taxa) %in% submap[,"X.SampleID"])] #subtaxa variable used for alpha diversity
#beta diversity iteration
betataxa<- staxa[(colnames(staxa) %in% map[,"X.SampleID"])] #Create table with just taxa and subjects
betataxa <- t(betataxa) #transpose
#rendering
render(input = "lib/MCTS_pdf_mcb_7_3.Rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document",
output_dir = "output/output")
}
