# differentiation tests for Diet #
min.prevalence <- .1
x <- x[,colMeans(x>0) > min.prevalence]
x <- asin(sqrt(x))
View(x)
m <- m[order(m$Diet),]
x <- x[rownames(m),]
View(x)
differentiation.test(x, m[,opts$column], alpha=2, parametric=FALSE)
results<- differentiation.test(x,m$Diet)
View(feature.selection)
View(feature.statistics)
results<- feature.statistics(x,m$Diet)
write.differentiation.test.results(results)
results<- statistical.test.mwas(x,m$Diet)
test.type = fdr
results<- statistical.test.mwas(x,m$Diet, test.type = fdr)
results<- statistical.test.mwas(x,m$Diet, test.type = "fdr")
results<- statistical.test.mwas(x,m$Diet)
?test.type()
test.type <- "parametric"
results<- statistical.test.mwas(x,m$Diet)
test.type <- "FDR"
results<- statistical.test.mwas(x,m$Diet)
opts$ftMethod <- "FDR"
opts$category <- "Diet"
opts$outdir <- "~/Documents/Projects/HFD Mouse Fungal/Output/"
file.sources <-list.files("~/Documents/Projects/mwas/lib", pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
invisible(sapply(file.sources, source, .GlobalEnv))
m <- load.qiime.mapping.file('~/Documents/Projects/HFD Mouse Fungal/raw data/mapping/16S/map_all.txt')
x  <- load.qiime.otu.table('~/Documents/Projects/HFD Mouse Fungal/raw data/Original OTU tables/16S/otutable_rare90851.biom')
min.prevalence <- .1
x <- x[,colMeans(x>0) > min.prevalence]
x <- asin(sqrt(x))
m <- m[order(m$Diet),]
x <- x[rownames(m),]
results<- statistical.test.mwas(x,m$Diet)
dim(m)
dim(m)[2]>1
diff.tests <- differentiation.test(x,m[,Diet], alpha =2, parametric = FALSE)
View(import.stats.params)
wilcox.test(x, m$Diet)
?wilcox.test()
View(x)
opts<-list()
opts<-list()
opts$mode <- "statistics"
opts$method <- "fdr"
opts$input_fp <- '~/Documents/Projects/HFD Mouse Fungal/raw data/mapping/16S/map_all.txt'
opts$map_fp <- '~/Documents/Projects/HFD Mouse Fungal/raw data/Original OTU tables/16S/otutable_rare90851.biom'
opts$category <- "Diet"
opts$outdir <- "~/Documents/Projects/HFD Mouse Fungal/Output/feat_test"
opts$fdr <- 0.05
feat_stats <- import.stats.params(opts)
m <- load.qiime.mapping.file('~/Documents/Projects/HFD Mouse Fungal/raw data/mapping/16S/map_all.txt')
x  <- load.qiime.otu.table('~/Documents/Projects/HFD Mouse Fungal/raw data/Original OTU tables/16S/otutable_rare90851.biom')
opts<-list()
opts$mode <- "statistics"
opts$method <- "fdr"
opts$input_fp <- m
opts$map_fp <- x
opts$category <- "Diet"
opts$outdir <- "~/Documents/Projects/HFD Mouse Fungal/Output/feat_test"
opts$fdr <- 0.05
feat_stats <- import.stats.params(opts)
opts<-list()
opts$mode <- "statistics"
opts$method <- "fdr"
opts$input_fp <- '~/Documents/Projects/HFD Mouse Fungal/raw data/Original OTU tables/16S/otutable_rare90851.biom'
opts$map_fp <- '~/Documents/Projects/HFD Mouse Fungal/raw data/mapping/16S/map_all.txt'
opts$category <- "Diet"
opts$outdir <- "~/Documents/Projects/HFD Mouse Fungal/Output/feat_test"
opts$fdr <- 0.05
feat_stats <- import.stats.params(opts)
statistical.test.mwas(feat_stats)
ft <- read.table('~/Documents/Projects/HFD Mouse Fungal/Output/feat_test/feature_statistics.txt',sep='\t',head=T,row=1,check=F,quote='"',comment='')
ft.qvalue <- subset(ft, qvalue < 0.25)
ft.qvalue <- t(ft.qvalue)
keep <- colnames(x)[colnames(x) %in% colnames(ft.qvalue)]
x2 <- x[,keep]
run.beeswarm(m,x2,m$Diet,'beeswarm.qvalue0.25.pdf')
run.beeswarm(m,x2,m$Diet,'beeswarm.qvalue0.25.pdf', out.dir = "~/Documents/Projects/HFD Mouse Fungal/Output/beeswarm")
ft <- read.table('differentiated.features.txt',sep='\t',head=T,row=1,check=F,quote='"',comment='')
ft <- read.table('~/Documents/Projects/HFD Mouse Fungal/Output/feat_test/feature_statistics.txt',sep='\t',head=T,row=1,check=F,quote='"',comment='')
ft.qvalue <- subset(ft, qvalue < 0.05)
ft.qvalue <- t(ft.qvalue)
keep <- colnames(x)[colnames(x) %in% colnames(ft.qvalue)]
x2 <- x[,keep]
run.beeswarm(m,x2,m$Diet,'beeswarm. qvalue0.05.pdf')
run.beeswarm(m,x2,m$Diet,'beeswarm. qvalue0.05.pdf', out.dir = "~/Documents/Projects/HFD Mouse Fungal/Output/beeswarm")
ft <- read.table('~/Documents/Projects/HFD Mouse Fungal/Output/feat_test/feature_statistics.txt',sep='\t',head=T,row=1,check=F,quote='"',comment='')
ft.qvalue <- subset(ft, qvalue < 0.25)
ft.qvalue <- t(ft.qvalue)
keep <- colnames(x)[colnames(x) %in% colnames(ft.qvalue)]
x2 <- x[,keep]
run.beeswarm(m,x2,m$Diet,'beeswarm.qvalue0.25.pdf', out.dir = "~/Documents/Projects/HFD Mouse Fungal/Output/beeswarm")
ft <- read.table('~/Documents/Projects/HFD Mouse Fungal/Output/feat_test/feature_statistics.txt',sep='\t',head=T,row=1,check=F,quote='"',comment='')
ft.qvalue <- subset(ft, qvalue < 0.05)
ft.qvalue <- t(ft.qvalue)
keep <- colnames(x)[colnames(x) %in% colnames(ft.qvalue)]
x2 <- x[,keep]
run.beeswarm(m,x2,m$Diet,'beeswarm. qvalue0.05.pdf', out.dir = "~/Documents/Projects/HFD Mouse Fungal/Output/beeswarm")
x.plot <- x
colnames(x.plot) <- shorten.taxonomy(colnames(x.plot))
x.plot <- x.plot[ order(rownames(x.plot)) , ]
# keep top taxa, make an "Other" column for the rest
keep.ix <- order(colMeans(x.plot),decreasing=TRUE)[1:10]
x.plot <- cbind(x.plot[,keep.ix], 1- rowSums(x.plot[,keep.ix]))
colnames(x.plot)[ncol(x.plot)] <- 'Other'
cols <- brewer.pal(12,'Set3')
pdf('barplots_diet.pdf',width=8,height=4);
par(mfrow=c(1,3))
treatment.diet <- c('HighFat','Normal')
for(i in 1:length(treatment.diet)){
treatment.diet.i <- treatment.diet[i]
if(i == 1){
par(mar=c(5,2.75,1,.25))
yaxt <- 's'
} else {
par(mar=c(5,.25,1,.25))
yaxt <- 'n'
}
x.plot.i <- x.plot[m$Diet==treatment.diet.i,]
x.plot.i <- x.plot.i[order(cmdscale(vegdist(x.plot.i),1)),]
barplot(t(x.plot.i),col=cols,las= 2, xlab=treatment.diet.i,yaxt=yaxt)
}
plot(0,0,type='n',axes=F,xlab='',ylab='')
legend('left',colnames(x.plot.i),fill=cols, cex = 0.85)
dev.off()
ft <- read.table('~/Documents/Projects/HFD Mouse Fungal/Output/feat_test/feature_statistics.txt',sep='\t',head=T,row=1,check=F,quote='"',comment='')
View(ft)
ft.qvalue <- subset(ft, qvalue < 0.25)
View(ft.qvalue)
ft.qvalue <- t(ft.qvalue)
View(ft.qvalue)
keep <- colnames(x)[colnames(x) %in% colnames(ft.qvalue)]
x2 <- x[,keep]
run.beeswarm(m,x2,m$Diet,'~/Documents/Projects/HFD Mouse Fungal/Output/beeswarm/beeswarm.qvalue0.25.pdf')
opts<-list()
opts$mode <- "statistics"
opts$method <- "fdr"
opts$input_fp <- '~/Documents/Projects/HFD Mouse Fungal/raw data/Original OTU tables/16S/otutable_rare90851.biom'
opts$map_fp <- '~/Documents/Projects/HFD Mouse Fungal/raw data/mapping/16S/map_all.txt'
opts$category <- "Diet"
opts$outdir <- "~/Documents/Projects/HFD Mouse Fungal/Output/feat_test"
opts$fdr <- 0.05
feat_stats <- import.stats.params(opts)
file.sources <-list.files("~/Documents/Projects/mwas/lib", pattern="*.R$", full.names=TRUE, ignore.case=TRUE)
invisible(sapply(file.sources, source, .GlobalEnv))
m <- load.qiime.mapping.file('~/Documents/Projects/HFD Mouse Fungal/raw data/mapping/16S/map_all.txt')
x  <- load.qiime.otu.table('~/Documents/Projects/HFD Mouse Fungal/raw data/Original OTU tables/16S/otutable_rare90851.biom')
min.prevalence <- .1
x <- x[,colMeans(x>0) > min.prevalence]
x <- asin(sqrt(x))
m <- m[order(m$Diet),]
x <- x[rownames(m),]
results<- differentiation.test(x,m$Diet)
View(differentiation.test)
m <- load.qiime.mapping.file('~/Documents/Projects/HFD Mouse Fungal/raw data/mapping/16S/map_all.txt')
x  <- load.qiime.otu.table('~/Documents/Projects/HFD Mouse Fungal/raw data/Original OTU tables/16S/otutable_rare90851.biom')
min.prevalence <- .1
x <- x[,colMeans(x>0) > min.prevalence]
x <- asin(sqrt(x))
m <- m[order(m$Diet),]
x <- x[rownames(m),]
results<- differentiation.test(x,m$Diet)
View(x)
x  <- load.qiime.otu.table('~/Documents/Projects/HFD Mouse Fungal/raw data/Original OTU tables/16S/otutable_rare90851.biom')
results<- differentiation.test(x,m$Diet)
write.differentiation.test.results(results)
results
results<- differentiation.test(x,m$Diet)
results
head(results)
?head()
View(results)
write.differentiation.test.results(results)
View(results)
read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt")
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt")
View(short_otu)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
header = TRUE)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
sep = "\t"
comment = "",
header = TRUE)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
sep = "\t",
comment = "")
View(short_otu)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
sep = "\t",
comment = "",
header = TRUE)
View(short_otu)
library(dplyr)
data.frame(
var1=rep(rep(c('AA.1', 'AA.2', 'AA.3', 'BB.1', 'BB.2', 'BB.3'), each=3), 2),
var2=rep(c('X', 'Y'), each=18),
var3=sample(20:40, 36, replace=TRUE)
)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
sep = "\t",
header = TRUE)
View(short_otu)
short_otu.t <- t(short_otu)
View(short_otu.t)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
sep = "\t",
header = TRUE,
row.names = 1)
View(short_otu)
short_otu.t <- t(short_otu)
View(short_otu.t)
library(dplyr)
View(short_otu.t)
library(tibble)
short_otu.t <- rownames_to_column(short_otu.t, var = "taxa")
s
s
s
s
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
sep = "\t",
header = TRUE,
row.names = 1)
short_otu.t <- as.data.frame(t(short_otu))
short_otu.t <- rownames_to_column(short_otu.t, var = "taxa")
View(short_otu.t)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
sep = "\t",
header = TRUE,
row.names = 1)
short_otu.t <- as.data.frame(t(short_otu))
short_otu.t <- rownames_to_column(short_otu.t, var = "SampleID")
View(short_otu.t)
df <-  data.frame(
asihckhdoydk = sample(LETTERS[1:3], 100, replace=TRUE),
a30mvxigxkgh = sample(LETTERS[1:3], 100, replace=TRUE),
value = rnorm(100)
)
View(df)
grp_cols <- names(df)[-3]
dots <- lapply(grp_cols, as.symbol)
df %>%
group_by_(.dots=dots) %>%
summarise(n = n())
View(short_otu.t)
mutate(ID = substring("SampleID", 1, 6))
short_grouped <- short_otu.t %>%
mutate(ID = substring("SampleID", 1, 6))
short_grouped$ID
short_grouped <- short_otu.t %>%
mutate(ID = SampleID)
short_otu.t$ID <- short_otu.t$SampleID
short_otu.t$ID
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
sep = "\t",
header = TRUE,
row.names = 1)
short_otu.t <- as.data.frame(t(short_otu))
short_otu.t <- rownames_to_column(short_otu.t, var = "SampleID")
short_otu.t$ID <- substr(short_otu.t$SampleID,1,nchar(short_otu.t)-2)
short_otu.t$ID
short_otu.t$ID <- substr(short_otu.t$SampleID,1,nchar(short_otu.t$SampleID)-2)
short_otu.t$ID <- substr(short_otu.t$SampleID,1,nchar(short_otu.t$SampleID)-2)
short_otu.t$ID
grouped <- short_otu.t %>% group_by(ID) %>% summarise(funs(sum))
grouped <- short_otu.t %>% group_by(ID) %>% summarize(funs(sum))
grouped <- short_otu.t %>% group_by(ID)
View(grouped)
grouped <- short_otu.t %>% group_by(ID) %>% summarize_each(funs(sum))
short_otu.t <- select(SampleID, ID, everything())
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
sep = "\t",
header = TRUE,
row.names = 1)
short_otu.t <- as.data.frame(t(short_otu))
short_otu.t <- rownames_to_column(short_otu.t, var = "SampleID")
short_otu.t$ID <- substr(short_otu.t$SampleID,1,nchar(short_otu.t$SampleID)-2)
short_otu.t <- select(SampleID, ID, everything())
short_otu.t <- short_otu.t %>% select(SampleID, ID, everything())
rm(short_grouped)
rm(grouped)
by_sample <- short_otu.t %>% group_by(ID) %>% select(-1,-2) %>% summarize_each(funs(sum))
View(by_sample)
for_export <- as.data.frame(t(by_sample))
View(for_export)
for_export <- column_to_rownames(by_sample, var = "OTUID")
for_export <- as.data.frame(t(by_sample))
for_export <- column_to_rownames(by_sample, var = "ID")
for_export <- as.data.frame(t(by_sample))
View(for_export)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
sep = "\t",
header = TRUE,
row.names = 1)
short_otu.t <- as.data.frame(t(short_otu))
short_otu.t <- rownames_to_column(short_otu.t, var = "SampleID")
short_otu.t$ID <- substr(short_otu.t$SampleID,1,nchar(short_otu.t$SampleID)-2)
short_otu.t <- short_otu.t %>% select(SampleID, ID, everything())
by_sample <- short_otu.t %>% group_by(ID) %>% select(-1,-2) %>% summarize_each(funs(sum))
for_export <- column_to_rownames(by_sample, var = "ID")
for_export <- as.data.frame(t(by_sample))
View(for_export)
View(by_sample)
short_otu <- read.table("Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/short_fungal_tax.txt",
comment = "",
sep = "\t",
header = TRUE,
row.names = 1)
short_otu.t <- as.data.frame(t(short_otu))
short_otu.t <- rownames_to_column(short_otu.t, var = "SampleID")
short_otu.t$ID <- substr(short_otu.t$SampleID,1,nchar(short_otu.t$SampleID)-2)
short_otu.t <- short_otu.t %>% select(SampleID, ID, everything())
by_sample <- short_otu.t %>% group_by(ID) %>% select(-1,-2) %>% summarize_each(funs(sum))
for_export <- column_to_rownames(by_sample, var = "ID")
View(for_export)
export <- as.data.frame(t(for_export)
export <- as.data.frame(t(for_export))
View(export)
export <- rownames_to_column(export, var = "#OTUID")
write.table(by_sample, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "/t",
row.names = )
View(export)
write.table(by_sample, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "/t",
row.names = FALSE,
header = TRUE)
write.table(by_sample, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "/t",
row.names = FALSE,
col.names = TRUE)
write.table(by_sample, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "\t",
quote = ""
row.names = FALSE,
col.names = TRUE)
write.table(export, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "\t",
quote = ""
row.names = FALSE,
col.names = TRUE)
write.table(export, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "\t",
quote = "",
row.names = FALSE,
col.names = TRUE)
write.table(export, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "\t",
comment = "",
row.names = FALSE,
col.names = TRUE)
write.table(export, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "\t",
row.names = FALSE,
col.names = TRUE)
write.table(export, file = "Documents/Projects/HFD Mouse Fungal/Data/ITS/short_ITS_grouped_tax.txt",
sep = "\t",
quote = FALSE,
row.names = FALSE,
col.names = TRUE)
write.table(export, file = "Documents/Projects/HFD Mouse Fungal/raw data/Embalmer ITS output/grouped_short_otu_tax.txt",
sep = "\t",
quote = FALSE,
row.names = FALSE,
col.names = TRUE)
27+21
48/12
48/24
48/36
48000/3
16000/12
map <- read.table("Documents/Projects/MCTs/Data/For use in class/class_map_blinded1_nutr.txt",
sep = "\t",
header = TRUE)
View(map)
map <- read.table("Documents/Projects/MCTs/Data/For use in class/class_map_blinded1_nutr.txt",
sep = "\t",
header = TRUE,
comment= "")
View(map)
map$Kstatus <- ifelse(map$Gender=="F"|map$VK <= 90, "low", map$VK)
View(map)
map$Kstatus
map$Kstatus <- ifelse(map$Gender=="F"& map$VK < 90 | map$Gender=="M"|map$VK < 120, "low",  map$VK)
map <- read.table("Documents/Projects/MCTs/Data/For use in class/class_map_blinded1_nutr.txt",
sep = "\t",
header = TRUE,
comment= "")
map$Kstatus <- ifelse(map$Gender=="F"& map$VK < 90 | map$Gender=="M"|map$VK < 120, "low",  map$VK)
map$Kstatus
map$Kstatus <- ifelse(map$Gender=="F"& map$VK < 90 | map$Gender=="M"|map$VK < 120, "low", "normal")
map$Kstatus
map <- read.table("Documents/Projects/MCTs/Data/For use in class/class_map_blinded1_nutr.txt",
sep = "\t",
header = TRUE,
comment= "")
map$Kstatus <- ifelse(map$Gender=="F"& map$VK < 90 | map$Gender=="M"|map$VK < 120, "low", "normal")
map$Kstatus
map$Folatestatus <- ifelse(map$FOLA < 400, "low", "normal")
map$Folatestatus
map$Cholstatus <- ifelse(map$Gender=="F"& map$CHOLN < 425 | map$Gender=="M"|map$CHOLN < 450, "low", "normal")
map$Cholstatus
map <- read.table("Documents/Projects/MCTs/Class/Mapping from Grace/map-subset-no-transition.txt",
sep = "\t",
header = TRUE,
comment= "")
View(map)
map$Kstatus <- ifelse(map$Gender=="F"& map$VK < 90 | map$Gender=="M"|map$VK < 120, "low", "normal")
# folate < 400
map$Folatestatus <- ifelse(map$FOLA < 400, "low", "normal")
# if female choline < 425
# if male choline < 450
map$Cholstatus <- ifelse(map$Gender=="F"& map$CHOLN < 425 | map$Gender=="M"|map$CHOLN < 450, "low", "normal")
write.table(map, "Documents/Projects/MCTs/Class/Mapping from Grace/map-with-vit-status.txt", sep = "/t")
write.table(map, "Documents/Projects/MCTs/Class/Mapping from Grace/map-with-vit-status.txt", sep = "/t", header = TRUE)
write.table(map, "Documents/Projects/MCTs/Class/Mapping from Grace/map-with-vit-status.txt", sep = "/t", col.names = TRUE, row.names = FALSE)
write.table(map, "Documents/Projects/MCTs/Class/Mapping from Grace/map-with-vit-status.txt",
sep = "/t",
quote = FALSE,
col.names = TRUE,
row.names = FALSE)
write.table(map, "Documents/Projects/MCTs/Class/Mapping from Grace/map-with-vit-status.txt",
sep = "\t",
quote = FALSE,
col.names = TRUE,
row.names = FALSE)
setwd("/Users/abby/Documents/Projects/zebra/") # set to zebra directory
setwd("/Users/abby/Documents/Projects/zebra/raw/") # set to zebra directory
map <- read.table("new_map_with_treatment.txt", sep = "\t", header = TRUE, comment = "") #load mapping file
setwd("C:\\Users\\Surface Pro 3\\Documents\\GitHub\\zebra\\lib")
setwd("/Users/abby/Documents/Projects/zebra/raw/") # set to zebra directory
map <- read.table("new_map_with_treatment.txt", sep = "\t", header = TRUE, comment = "") #load mapping file
setwd("/Users/abby/Documents/Projects/zebra/lib")
library("rmarkdown")
library("knitr")
library("rmarkdown")
library("knitr")
install.packages("rmarkdown")
install.packages("rmarkdown")
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
library("knitr")
load("knitr")
library("knitr")
install.packages("knitr")
install.packages("knitr")
library("rmarkdown")
library("knitr")
setwd("/Users/abby/Documents/Projects/zebra/raw/") # set to zebra directory
map <- read.table("new_map_with_treatment.txt", sep = "\t", header = TRUE, comment = "") #load mapping file
setwd("/Users/abby/Documents/Projects/zebra/lib")
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
library("texlive-latex-extra")
install.packages(texlive-latex-extra)
library(ggplot2)
library(rmarkdown)
library(knitr)
library(ggplot2)
p <- ggplot(subgroup$PROT, aes(subgroup$StudyDayNo))
p <- p + geom_bar()
subgroup <- map[map$UserName == id,]
p <- ggplot(subgroup$PROT, aes(subgroup$StudyDayNo))
p <- ggplot(map$PROT, aes(map$StudyDayNo))
p <- ggplot(PROT, aes(StudyDayNo), data = map)
?geom_bar
p <- geom_col(map$PROT, aes(map$StudyDayNo))
?ggplot()
p <- ggplot(data = map, mapping = aes(PROT, StudyDayNo))
p
p <- p + geom_bar
p <- p + geom_bar()
p
p <- ggplot(data = map, mapping = aes(PROT, group =StudyDayNo))
p <- p + geom_bar()
p
p <- ggplot(data = map, mapping = aes(y = PROT, group =StudyDayNo))
p <- p + geom_bar()
p
p <- ggplot(data = map, mapping = aes(PROT, group =StudyDayNo))
p <- p + geom_poin()
p <- p + geom_point()
p
p <- ggplot(data = map, mapping = aes(PROT))
p <- p + geom_point()
p
library(rmarkdown)
library(knitr)
library(ggplot2)
setwd("/Users/abby/Documents/Projects/zebra/raw/") # set to zebra directory
map <- read.table("new_map_with_treatment.txt", sep = "\t", header = TRUE, comment = "") #load mapping file
setwd("/Users/abby/Documents/Projects/zebra/lib")
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
