cor(as.numeric(norm.food), as.numeric(foodhat))
foodhat[1:10,1:10]
food[1:10,1:10]
foodhat <- norm.food
View(foodhat)
View(norm.food)
cor(as.numeric(norm.food), as.numeric(foodhat))
foodhat[1:10,1:10]
for(i in 1:nrow(beta)){
foodhat[i,] <- norm.food[order(beta[i,])[2],]
}
foodhat[1:10,1:10]
cor(as.numeric(norm.food), as.numeric(foodhat))
foodhat.mc <- food
foodhat.mc <- norm.food
for(i in 1:nrow(beta)){foodhat.mc[i,] <- norm.food[sample((1:nrow(norm.food))[-i])[1],]}
cor(as.numeric(food), as.numeric(foodhat.mc))
foodhat[1,]
order(beta[1,])[2]
order(beta[2,])[2]
order(beta)
ord.food <- norm.food[order(beta)]
View(ord.food)
as.data.frame(ord.food)
ord.food <- as.data.frame(ord.food)
rm(ord.food)
rm(d.chisq)
dim(beta)
View(beta)
View(oder(beta))
View(order(beta))
?sort()
?order()
View(beta[1])
beta <- as.matrix(dist(my.ca$CA$u))
author: "Abby"
---
title: "Data analysis and cleaning of MCT Study"
author: "Abby"
date: "April 20, 2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
---
title: "Data analysis and cleaning of MCT Study"
author: "Abby"
date: "April 20, 2017"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
summary(cars)
plot(pressure)
plot(pressure)
mean(subgroup$PROT)
library(rmarkdown)
library(knitr)
library(ggplot2)
setwd("/Users/abby/Documents/Projects/zebra/raw/") # set to zebra directory
map <- read.table("new_map_with_treatment.txt", sep = "\t", header = TRUE, comment = "") #load mapping file
setwd("/Users/abby/Documents/Projects/zebra/lib")
=======
View(test)
test <- items[map$UserName == "Subject_15",]
test <- map[map$UserName == "Subject_15",]
Protein <- mean(test$PROT)
Protein <- mean(test$PROT)
FAT <- mean(test$TFAT)
Cals <- mean(test$KCAL)
Carbs <- mean(test$CARB)
plot((StudyDayNo,PROT),type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
plot(StudyDayNo,PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
plot(test$StudyDayNo,test$PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
plot(test$StudyDayNo,test$PROT,type = "l", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
plot(test$StudyDayNo,test$PROT,type = "l", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
plot(test$StudyDayNo,test$PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
plot(test$StudyDayNo,test$PROT,type = "o", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', UserName, '.pdf'))
}
getwd()
setwd("C:\\Users\\Surface Pro 3\\Documents\\GitHub\\zebra\\lib")
render("MCTS_pdf.rmd",output_file = paste0('report.', UserName, '.pdf'))
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', UserName, '.pdf'))
}
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
library("rmarkdown")
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
}
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
library("knitr")
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
knit2pdf("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
knit2pdf("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
knit2pdf("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'))
}
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
setwd("C:\\Users\\Surface Pro 3\\Documents\\GitHub\\zebra\\lib")
library("rmarkdown")
library("knitr")
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
#Protein
mean(subgroup$PROT)
#FAT
mean(subgroup$TFAT)
#Cals
mean(subgroup$KCAL)
#Carbs
mean(subgroup$CARB)
#Protein Plot
plot(subgroup$StudyDayNo,subgroup$PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
Protein
mean(subgroup$PROT)
FAT
mean(subgroup$TFAT)
Cals
mean(subgroup$KCAL)
Carbs
mean(subgroup$CARB)
Protein Plot
mean(subgroup$PROT)
mean(subgroup$TFAT)
mean(subgroup$KCAL)
mean(subgroup$CARB)
plot(subgroup$StudyDayNo,subgroup$PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
mean(subgroup$PROT)
mean(subgroup$PROT)
mean(subgroup$PROT)
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
library("rmarkdown")
library("knitr")
>>>>>>> origin/master
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
<<<<<<< HEAD
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
plot(subgroup$StudyDayNo,subgroup$PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
# Chunk 1
mean(subgroup$PROT)
# Chunk 2
mean(subgroup$TFAT)
# Chunk 3
mean(subgroup$KCAL)
# Chunk 4
mean(subgroup$CARB)
plot(subgroup$StudyDayNo,subgroup$PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
plot(subgroup$StudyDayNo,subgroup$PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
library(knitr)
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
plot(subgroup$StudyDayNo,subgroup$PROT,type = "b", col = "red", xlab = "Day", ylab = "Prot Amount",main = "Protein Intake")
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
fig.show = "hold"
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar") + fig.show = hold
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar") + fig.show = "hold""
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar") + fig.show = "hold""
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
fig.show = "hold"
fig.show = "hold"
ggplot(subgroup, aes(x=factor(StudyDayNo), y=PROT)) + stat_summary(fun.y="mean", geom="bar")
=======
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
CCC
cccc
install.packages("ggplot2")
library(ggplot2)
ggplot(subgroup$StudyDayNo,subgroup$PROT)
ggplot(subgroup$StudyDayNo,aes(subgroup$PROT))
ggplot(subgroup$StudyDayNo,aes(PROT))
ggplot(StudyDayNo,aes(PROT))
ggplot(PROT,aes(StudyDayNo))
p <- ggplot(PROT)
p <- ggplot2(PROT)
View(map)
View(map)
View(subgroup)
View(subgroup)
p <- ggplot2(map) + aes(x = StudyDayNo, fill = PROT,FAT,CARB,KCAL,TFAT,FIBE) + geom_bar(position = 'dodge')
p <- ggplot(map) + aes(x = StudyDayNo, fill = PROT,FAT,CARB,KCAL,TFAT,FIBE) + geom_bar(position = 'dodge')
library(ggplot2)
library(ggplot)
install.packages("ggplot2")
library(ggplot2)
p <- ggplot(map) + aes(x = StudyDayNo, fill = PROT,FAT,CARB,KCAL,TFAT,FIBE) + geom_bar(position = 'dodge')
p <- ggplot(subgroup, aes(x = StudyDayNo,y = PROT))
p
p <- ggplot(subgroup, aes(x = StudyDayNo, y = PROT))
p <- ggplot(subgroup, aes(x = StudyDayNo, y = PROT))
p <- ggplot(subgroup, aes(x = StudyDayNo, y = PROT))
mean(subgroup$PROT)
mean(subgroup$TFAT)
mean(subgroup$KCAL)
mean(subgroup$CARB)
p
p <- ggplot(subgroup, aes(x = subgroup$StudyDayNo, y = subgroup$PROT))
p
ggplot(data=subgroup, aes(x= StudyDayNo, y=PROT)) +
geom_bar(stat="identity")
ggplot(data=subgroup, aes(x= StudyDayNo, y=PROT)) +
geom_bar(stat = "identity")
ggplot(data=subgroup, aes(x= StudyDayNo, y=PROT, fill = StudyDayNo)) +
geom_bar(stat = "identity")
dfm <- melt(subgroup[,c('StudyDayNo','PROT','KCAL','TFAT','FIBE','CAFF')],id.vars = 1)
library("reshape2", lib.loc="~/R/win-library/3.3")
dfm <- melt(subgroup[,c('StudyDayNo','PROT','KCAL','TFAT','FIBE','CAFF')],id.vars = 1)
View(dfm)
View(dfm)
ggplot(dfm,aes(x = Day,y = Calories)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
scale_y_log10()
ggplot(dfm,aes(x = StudyDayNo,y = Calories)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
scale_y_log10()
dfm <- melt(subgroup[,c('StudyDayNo','PROT','KCAL','TFAT','FIBE','CAFF')],id.vars = 1)
ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
scale_y_log10()
dfm <- melt(subgroup[,c('StudyDayNo','PROT','KCAL','TFAT','FIBE','CAFF')],id.vars = 1)
ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack") +
scale_y_log10()
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF')],id.vars = 1)
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF')],id.vars = 1)
ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack") +
scale_y_log10()
p <- ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack") +
scale_y_log10()
p
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR','CALC')],id.vars = 1)
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR','CALC')],id.vars = 1)
p <- ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack") +
scale_y_log10()
p
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR')],id.vars = 1)
p <- ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack") +
scale_y_log10()
p
library(scales)
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR')],id.vars = 1)
p <- ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack",scale_y_continuous(labels=comma)) +
scale_y_log10()
library(scales)
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR')],id.vars = 1)
p <- ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack",scale_y_continuous(labels=comma)) +
scale_y_log10()
p <- ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack")
library(scales)
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR')],id.vars = 1)
p <- ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack")
mean(subgroup$PROT)
mean(subgroup$TFAT)
mean(subgroup$KCAL)
mean(subgroup$CARB)
library(scales)
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR')],id.vars = 1)
p <- ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack")
p
ggplot(subgroup,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = KCAL),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = KCAL),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = fl)),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = fl),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = fl),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = blues9),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
b + geom_bar(aes(fill = fl),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = fl),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge")
ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge")
p <- ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge")
p+guides(fill=FALSE)
p
p+guides(fill=FALSE)
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR')],id.vars = 1)
ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack")
p <- ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge")
p+guides(fill=FALSE)
load("C:/Users/Surface Pro 3/Downloads/airports.rda")
View(airports)
View(airports)
mean(subgroup$PROT)
row1 <- c(mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$KCAL),mean(subgroup$CARB))
row2 <- c(mean(map$PROT),mean(map$TFAT),mean(map$KCAL),mean(map$CARB))
totalstudy <- data.frame(You=row1,
Study_Avg=row2)
mean(map$TFAT)
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
>>>>>>> origin/master
library(rmarkdown)
library(knitr)
library(ggplot2)
setwd("C:\\Users\\Surface Pro 3\\Documents\\GitHub\\zebra\\raw") # set to zebra directory
map <- read.table("new_map_with_treatment.txt", sep = "\t", header = TRUE, comment = "") #load mapping file
setwd("C:\\Users\\Surface Pro 3\\Documents\\GitHub\\zebra\\lib")
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
summary(cars)
mean(subgroup$PROT)
row1 <- c(mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$KCAL),mean(subgroup$CARB))
row2 <- c(mean(map$PROT),mean(map$TFAT),mean(map$KCAL),mean(map$CARB))
totalstudy <- data.frame(You=row1,
Study_Avg=row2)
{r, echo=FALSE, message=FALSE, warnings=FALSE, results='asis'}
mean(subgroup$PROT)
row1 <- c(mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$KCAL),mean(subgroup$CARB))
row2 <- c(mean(map$PROT),mean(map$TFAT),mean(map$KCAL),mean(map$CARB))
totalstudy <- data.frame(You=row1,
Study_Avg=row2)
tabl <- "  # simple table creation here
| Tables                    | Are           | Cool  |
|---------------------------|:-------------:|------:|
| mean(subgroup$PROT)       | right-aligned | $1600 |
| mean(subgroup$TFAT)       | centered      |   $12 |
| zebra stripes             | are neat      |    $1 |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
mean(subgroup$PROT)
row1 <- c(mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$KCAL),mean(subgroup$CARB))
row2 <- c(mean(map$PROT),mean(map$TFAT),mean(map$KCAL),mean(map$CARB))
totalstudy <- data.frame(You=row1,
Study_Avg=row2)
tabl <- "  simple table creation here
| Tables                    | Are           | Cool  |
|---------------------------|:-------------:|------:|
| mean(subgroup$PROT)       | right-aligned | $1600 |
| mean(subgroup$TFAT)       | centered      |   $12 |
| zebra stripes             | are neat      |    $1 |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
mean(subgroup$PROT)
row1 <- c(mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$KCAL),mean(subgroup$CARB))
row2 <- c(mean(map$PROT),mean(map$TFAT),mean(map$KCAL),mean(map$CARB))
totalstudy <- data.frame(You=row1,
Study_Avg=row2)
tabl <- "  simple table creation here
| Tables                    | Are           | Cool  |
|---------------------------|:-------------:|------:|
| `mean(subgroup$PROT)`       | right-aligned | $1600 |
| mean(subgroup$TFAT)       | centered      |   $12 |
| zebra stripes             | are neat      |    $1 |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
mean(subgroup$PROT)
row1 <- c(mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$KCAL),mean(subgroup$CARB))
row2 <- c(mean(map$PROT),mean(map$TFAT),mean(map$KCAL),mean(map$CARB))
totalstudy <- data.frame(You=row1,
Study_Avg=row2)
tabl <- "  simple table creation here
| Tables                    | Are           | Cool  |
|---------------------------|:-------------:|------:|
| "mean(subgroup$PROT)     "| right-aligned | $1600 |
mean(map$TFAT)
mean(map$TFAT,na.rm=TRUE)
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
library(pander)
library(pandoc)
Type <- c('Calories','Protein','Total Fat','Carbs','Fiber')
Your_Average <- c(mean(subgroup$KCAL), mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$CARB), mean(subgroup$FIBE))
Total_Average <- c(mean(map$KCAL,na.rm=TRUE), mean(map$PROT,na.rm=TRUE),mean(map$TFAT,na.rm=TRUE), mean(map$CARB,na.rm=TRUE), mean(map$FIBE,na.rm=TRUE))
Final_data <- data.frame(Type, Your_Average, Total_Average)
ktable(Final_data)
library(knitr)
Type <- c('Calories','Protein','Total Fat','Carbs','Fiber')
Your_Average <- c(mean(subgroup$KCAL), mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$CARB), mean(subgroup$FIBE))
Total_Average <- c(mean(map$KCAL,na.rm=TRUE), mean(map$PROT,na.rm=TRUE),mean(map$TFAT,na.rm=TRUE), mean(map$CARB,na.rm=TRUE), mean(map$FIBE,na.rm=TRUE))
Final_data <- data.frame(Type, Your_Average, Total_Average)
ktable(Final_data)
Type <- c('Calories','Protein','Total Fat','Carbs','Fiber')
Your_Average <- c(mean(subgroup$KCAL), mean(subgroup$PROT),mean(subgroup$TFAT),mean(subgroup$CARB), mean(subgroup$FIBE))
Total_Average <- c(mean(map$KCAL,na.rm=TRUE), mean(map$PROT,na.rm=TRUE),mean(map$TFAT,na.rm=TRUE), mean(map$CARB,na.rm=TRUE), mean(map$FIBE,na.rm=TRUE))
Final_data <- data.frame(Type, Your_Average, Total_Average)
kable(Final_data)
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
options(width = 1000)
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
dfm <- melt(subgroup[,c('StudyDayNo','PROT','TFAT','FIBE','CAFF','FIBE','SUGR')],id.vars = 1)
ggplot(dfm,aes(x = StudyDayNo,y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "stack") + scale_x_discrete(labels = abbreviate)
p <- ggplot(subgroup,aes(x = StudyDayNo,y = KCAL)) +
geom_bar(aes(fill = StudyDayNo),stat = "identity",position = "dodge") + scale_x_discrete(labels = abbreviate)
p+guides(fill=FALSE)
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.rmd",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
for (id in unique(map$UserName)){
subgroup <- map[map$UserName == id,]
render("MCTS_pdf.md",output_file = paste0('report.', id, '.pdf'),"pdf_document")
}
